@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Home Page";
}
@model List<Employee>

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
<div style="width:45%; float: left">
    <style>
        tbody, td, tfoot, th, thead, tr {
            border:inset;
            border-width:5px;
            border-color:black;
            border-style:double;
        }
    </style>
    <table>
        <tr>
            <th>Name</th>
            <th>Hours</th>
        </tr>
    @foreach(Employee i in Model)
    {
        @if(i.Hours < 100)
        {
            <tr style="background-color:red">
                <td>@Html.DisplayFor(model => i.Name)</td>
                <td>@Html.DisplayFor(model => i.Hours)</td>
            </tr>
        }
        else
        {
            <tr>
                <td>@Html.DisplayFor(model => i.Name)</td>
                <td>@Html.DisplayFor(model => i.Hours)</td>
            </tr> 
        }
    }
    </table>
</div>
<div >
    <div id="chartContainer" style="height: 300px; width: 45%;float:right;"></div>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
    <script type="text/javascript">
        let data = @Html.Raw(JsonConvert.SerializeObject(Model));
        let sumh=0;
        data.forEach(i=>{
            sumh += i.Hours;
        });
        console.log(sumh);
        let dataP=[];
        data.forEach(i=>{
            dataP.push({ y: i.Hours / sumh * 100, name: i.Name });
        }) ;
        let chart = new CanvasJS.Chart("chartContainer", {
	    animationEnabled: true,
            exportEnabled: true,
            showInLegend:true,
	    title: {
		    text: "Work hours percentage"
	    },
	    data: [{
		    type: "pie",
            showInLegend: true,
            toolTipContent: "{name}: <strong>{y}%</strong>",
		    startAngle: 240,
		    yValueFormatString: "##0.00\"%\"",
                indexLabel: "{name} {y}",
                dataPoints: dataP
	    }]
        });

        chart.render();
    </script>
</div>